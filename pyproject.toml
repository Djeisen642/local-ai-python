[project]
name = "local_ai"
version = "0.1.0"
description = "Local AI application"
requires-python = ">=3.13"
license = { file = "LICENSE" }
authors = [
  { name = "Samuel MARLHENS", email = "samuel.marlhens@proton.me" },
  { name = "Jason Suttles", email = "jasonssuttles@gmail.com" }
]
readme = { file = "README.md", content-type = "text/markdown" }
dependencies = [
    "ruff>=0.12.9",
    "faster-whisper>=1.0.0",
    "pyaudio>=0.2.11",
    "webrtcvad>=2.0.10",
    "psutil>=7.1.0",
    "torch>=2.8.0",
]

[project.urls]
homepage = "https://github.com/Djeisen642/local-ai-python#readme"
repository = "https://github.com/Djeisen642/local-ai-python"

[build-system]
requires = ["uv_build>=0.8.12,<0.9.0"]
build-backend = "uv_build"

[dependency-groups]
dev = [
  "pytest>=8.4.1",
  "pytest-cov>=6.2.1",
  "pytest-asyncio>=0.23.0",
  "mypy>=1.17.1",
  "bandit>=1.8.6",
  "docformatter>=1.7.7",
  "ruff>=0.12.9",
  "numpy>=1.24.0",
]

[tool.pytest.ini_options]
addopts = "-vvv"
testpaths = "tests"
asyncio_mode = "auto"
markers = [
    "integration: marks tests as integration tests (may be slow)",
    "unit: marks tests as fast unit tests",
    "performance: marks tests as performance benchmarks (may be very slow)"
]

[tool.ruff]
extend-exclude = [
  "__pycache__",
  "build",
  "dist",
]
target-version = "py313"
line-length = 90
src = ["src", "tests"]

# Specific configuration for speech_to_text module
[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["S101"]
"src/local_ai/speech_to_text/*.py" = []

[tool.ruff.lint]
extend-select = [
  "C4",
  "D200",
  "D201",
  "D204",
  "D205",
  "D206",
  "D210",
  "D211",
  "D213",
  "D300",
  "D400",
  "D402",
  "D403",
  "D404",
  "D419",
  "E",
  "F",
  "FURB",
  "G010",
  "I",
  "INP001",
  "N805",
  "PERF101",
  "PERF102",
  "PERF401",
  "PERF402",
  "PGH004",
  "PGH005",
  "PIE794",
  "PIE796",
  "PIE807",
  "PIE810",
  "PLR",
  "RET502",
  "RET503",
  "RET504",
  "RET505",
  "RUF015",
  "RUF032",
  "RUF033",
  "RUF034",
  "RUF041",
  "RUF046",
  "RUF057",
  "RUF100",
  "S101",
  "T20",
  "UP",
  "W",
]

[tool.mypy]
files = ["src", "tests"]
strict = "true"

# Strict type checking for speech_to_text module
[[tool.mypy.overrides]]
module = "local_ai.speech_to_text.*"
strict = true
warn_return_any = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
